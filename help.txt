h1. rah_repeat

p. Split and repeat a value by value. Rah_repeat is a plugin for "Textpattern CMS":http://www.textpattern.com.

* Version: 0.4
* Updated: 2009/11/30 11:00 AM GMT+2

h3. Table of Contents

* "Requirements":#requirements
* "Installation and usage":#installation-and-usage
* "Attributes":#attributes
* "Examples":#example
* "Changelog":#changelog

h3(#requirements). Requirements

* PHP 4.3.0+
* Textpattern 4.x.x+

h3(#installation-and-usage). Installation and usage

p. The general behavior stands: paste plugin code to the plugin installer textarea and run the automatic setup. Then just activate the plugin and you are ready to use new tags that plugin includes like others.

p. Basically just put wrap (contain) content in your pages/forms/articles with @<txp:rah_repeat></txp:rah_repeat>@ container tags, and customize output with your desired attributes. Contained content will be repeated and suplied with defined value(s).

h3(#attributes). Attributes

p. The main container tag is @<txp:rah_repeat>@ and attributes for it follow.

p. *delimiter*
Delimiter used to split the defined @value@ into multiple values. Default is comma.
Example: @delimiter="|"@ Default: @","@

p. *value*
Value to be split and suplied. Default is unset.
Example: @value="dog,cat,human"@ Default: @""@

p. *offset*
The number of items to skip. Default is unset, no offset is being used.
Example: @offset="5"@ Default: @""@

p. *limit*
The number of items to display. Note that skipped items (@offset@ option) are count into the limit. Default is unset, no limit is being used.
Example: @limit="10"@ Default: @""@

p. *wraptag*
The (X)HTML tag, without brackets used to wrap the output. Default is unset.
Default: @wraptag=""@ Example: @"div"@

p. *break*
The (X)HTML tag (without brackets) or string to separate list items. Default is unset.
Default: @break=""@ Example: @"br"@

p. *class*
The (X)HTML class applied to the wraptag. Default is unset.
Default: @class=""@ Example: @"plugin"@

p. The plugins has three more extra tags:

p. @<txp:rah_repeat_value />@
Is a single tag. It has no attributes. It's used to deliver split values. See examples.

p. @<txp:rah_repeat_if_first>@
Is a container tag. It has no attributes. Returns contained statement if the current item is the first item.

p. @<txp:rah_repeat_if_last>@
Is a container tag. It has no attributes. Returns contained statement if the current item is the last item.

h3(#example). Examples

p. *Example #1: Simple usage.*

bc. <txp:rah_repeat value="dog,cat,human">
	<li><txp:rah_repeat_value /></li>
</txp:rah_repeat>

Returns:

bc. <li>dog</li>
<li>cat</li>
<li>human</li>

p. *Example #2: Custom fields.*

p. Let's say that you have comma seperated list of items stored inside custom field. For example, list of "Nameless" videservice's video IDs (@ID1,ID2,ID3,ID4@). Thus you need to render video player code for every ID.

bc. <txp:rah_repeat value='<txp:custom_field name="MyCustomFieldName" />'>
	<object width="600" height="380">
		<param name="movie" value="http://example.com/v/<txp:rah_repeat_value />"></param>
		<embed src="http://example.com/v/<txp:rah_repeat_value />" width="600" height="380"></embed>
	</object>
</txp:rah_repeat>

Outputs 4 videoplayers.

p. *Example #3: Using Offset and limit.*

p. First display two items, then some text between, two items more, some more text and then the rest of items.

bc. <txp:rah_repeat value='<txp:custom_field name="MyCustomFieldName" />' limit="2">
	<txp:rah_repeat_value />
</txp:rah_repeat>
<p>Some text here.</p>
<txp:rah_repeat value='<txp:custom_field name="MyCustomFieldName" />' offset="2" limit="4">
	<txp:rah_repeat_value />
</txp:rah_repeat>
<p>Some another cool phrase here.</p>
<txp:rah_repeat value='<txp:custom_field name="MyCustomFieldName" />' offset="4">
	<txp:rah_repeat_value />
</txp:rah_repeat>

p. *Example #4: Repeat inside repeat.*

bc. <txp:rah_repeat value="group1|item1|item2,group2|item1|item2">
	<ul>
		<txp:rah_repeat value='<txp:rah_repeat_value />' delimiter="|">
			<li><txp:rah_repeat_value /></li>
		</txp:rah_repeat>
	</ul>
</txp:rah_repeat>

Returns:

bc. <ul>
	<li>group1</li>
	<li>item1</li>
	<li>item2</li>
</ul>
<ul>
	<li>group2</li>
	<li>item1</li>
	<li>item2</li>
</ul>

p. *Example #5: First and last.*

bc. <txp:rah_repeat value="foo,bar">
	<txp:rah_repeat_if_first>
		<ul>
	</txp:rah_repeat_if_first>
	<li><txp:rah_repeat_value /></li>
	<txp:rah_repeat_if_last>
		</ul>
	</txp:rah_repeat_if_last>
</txp:rah_repeat>

Returns:

bc. <ul>
	<li>foo</li>
	<li>bar</li>
</ul>

p. *Example #6: Wraptag and break.*

bc. <txp:rah_repeat value="foo,bar" wraptag="ul" break="li">
	<txp:rah_repeat_value />
</txp:rah_repeat>

Returns:

bc. <ul>
	<li>foo</li>
	<li>bar</li>
</ul>

p. *Example #7: Trim begining and ending whitespace from the value by using* "rah_function":http://rahforum.biz/plugins/rah_function.

bc. <txp:rah_repeat value="foo, bar">
	<txp:rah_function call="trim">
		<txp:rah_repeat_value />
	</txp:rah_function>
</txp:rah_repeat>

h3(#changelog). Changelog

p. *Version 0.4*

* Fixed: now returns old parent global, if two tags are used inside each other, instead of defining it empty.
* Added: @<txp:rah_repeat_if_first>@.
* Added: @<txp:rah_repeat_if_last>@.

p. *Version 0.3*

* Added attribute: @wraptag@.
* Added attribute: @break@.
* Added attribute: @class@.

p. *Version 0.2*

* Added attribute: @limit@.
* Added attribute: @offset@.

p. *Version 0.1*

* First release